{
  "contractName": "DecentralBank",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract RWD",
          "name": "_rwd",
          "type": "address"
        },
        {
          "internalType": "contract Tether",
          "name": "_tether",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rwd",
      "outputs": [
        {
          "internalType": "contract RWD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tether",
      "outputs": [
        {
          "internalType": "contract Tether",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract RWD\",\"name\":\"_rwd\",\"type\":\"address\"},{\"internalType\":\"contract Tether\",\"name\":\"_tether\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rwd\",\"outputs\":[{\"internalType\":\"contract RWD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tether\",\"outputs\":[{\"internalType\":\"contract Tether\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/DecentralBank.sol\":\"DecentralBank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/DecentralBank.sol\":{\"keccak256\":\"0x15fc3aaa2c21f8946163c708ff20a93732fc94f1596f252da23617db5d2b9d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf141621180ed8cceacd88c5eea7698bf253fdd048cdabb77b285c2650fc5123\",\"dweb:/ipfs/QmdecbhAaCggqzYBxHtB9yetxttZGah5f5sLbY8DcskG9T\"]},\"/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/RWD.sol\":{\"keccak256\":\"0x61f38683b998b428a6442c3259e4292e27573d7250a4d6c2f5586875132ded60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2947c814ff8a589c0ea4d77b4e3c98af90630d639337bf7386d89b667bdd576\",\"dweb:/ipfs/QmQFUun6oRiFctjAKCdkJ7JrELitYmTLxnT2rWgLZcX5r5\"]},\"/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/Tether.sol\":{\"keccak256\":\"0x576f56d942a536c3564c58debecea7461069eb1b281e98466918db753864fa77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a13b253d8552a6deb03e74bb418b144bcf62db0c5986a38a926073d31f181a\",\"dweb:/ipfs/QmXb4nBwBsZXQeMxRzjJdvT8y5stn72R8B5SPNzmrpXwAQ\"]}},\"version\":1}",
  "bytecode": "0x60c0604052600e60808190526d446563656e7472616c2042616e6b60901b60a090815261002f916000919061008c565b5034801561003c57600080fd5b506040516103e73803806103e783398101604081905261005b91610125565b600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556101b1565b8280546100989061015e565b90600052602060002090601f0160209004810192826100ba5760008555610100565b82601f106100d357805160ff1916838001178555610100565b82800160010185558215610100579182015b828111156101005782518255916020019190600101906100e5565b5061010c929150610110565b5090565b5b8082111561010c5760008155600101610111565b60008060408385031215610137578182fd5b825161014281610199565b602084015190925061015381610199565b809150509250929050565b60028104600182168061017257607f821691505b6020821081141561019357634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146101ae57600080fd5b50565b610227806101c06000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde03146100515780631a8972d31461006f5780635efc071a146100845780638da5cb5b1461008c575b600080fd5b610059610094565b6040516100669190610163565b60405180910390f35b610077610122565b604051610066919061014f565b610077610131565b610077610140565b600080546100a1906101b6565b80601f01602080910402602001604051908101604052809291908181526020018280546100cd906101b6565b801561011a5780601f106100ef5761010080835404028352916020019161011a565b820191906000526020600020905b8154815290600101906020018083116100fd57829003601f168201915b505050505081565b6002546001600160a01b031681565b6003546001600160a01b031681565b6001546001600160a01b031681565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561018f57858101830151858201604001528201610173565b818111156101a05783604083870101525b50601f01601f1916929092016040019392505050565b6002810460018216806101ca57607f821691505b602082108114156101eb57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122098acbcc598f159234f1b1160508841150ce3ccdaccfdea9d715aa33fc3967dee64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde03146100515780631a8972d31461006f5780635efc071a146100845780638da5cb5b1461008c575b600080fd5b610059610094565b6040516100669190610163565b60405180910390f35b610077610122565b604051610066919061014f565b610077610131565b610077610140565b600080546100a1906101b6565b80601f01602080910402602001604051908101604052809291908181526020018280546100cd906101b6565b801561011a5780601f106100ef5761010080835404028352916020019161011a565b820191906000526020600020905b8154815290600101906020018083116100fd57829003601f168201915b505050505081565b6002546001600160a01b031681565b6003546001600160a01b031681565b6001546001600160a01b031681565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561018f57858101830151858201604001528201610173565b818111156101a05783604083870101525b50601f01601f1916929092016040019392505050565b6002810460018216806101ca57607f821691505b602082108114156101eb57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122098acbcc598f159234f1b1160508841150ce3ccdaccfdea9d715aa33fc3967dee64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:981:3",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:3",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "137:313:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "183:26:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "192:6:3"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "200:6:3"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "185:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "185:22:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "185:22:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "158:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "167:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "154:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "154:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "179:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "150:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "150:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "147:2:3"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "218:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "237:9:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:16:3"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "222:5:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "289:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_RWD",
                      "nodeType": "YulIdentifier",
                      "src": "256:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:39:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:39:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "304:15:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "314:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "304:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "328:40:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "353:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "364:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "349:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "349:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "343:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:25:3"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "332:7:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "410:7:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_RWD",
                      "nodeType": "YulIdentifier",
                      "src": "377:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "377:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "377:41:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "427:17:3",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "437:7:3"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "427:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_RWD_$227t_contract$_Tether_$417_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "95:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "106:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "118:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "126:6:3",
                "type": ""
              }
            ],
            "src": "14:436:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "510:325:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "520:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "534:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "540:1:3",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "530:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "530:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "551:38:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "581:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "587:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "577:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "577:12:3"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "555:18:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "628:31:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "630:27:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "644:6:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "652:4:3",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "640:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:17:3"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "630:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "608:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "601:26:3"
                  },
                  "nodeType": "YulIf",
                  "src": "598:2:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:111:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "739:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "746:3:3",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "751:10:3",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "742:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "742:20:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "732:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "732:31:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "732:31:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "783:1:3",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "786:4:3",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "776:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "776:15:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "776:15:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "811:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "814:4:3",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "804:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:15:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:15:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "674:18:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "697:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "705:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "694:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "694:14:3"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "671:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "671:38:3"
                  },
                  "nodeType": "YulIf",
                  "src": "668:2:3"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "490:4:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "499:6:3",
                "type": ""
              }
            ],
            "src": "455:380:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "893:86:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "957:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "966:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "969:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "959:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "959:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "959:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "916:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "927:5:3"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "942:3:3",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "947:1:3",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "938:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "938:11:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "951:1:3",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:19:3"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "923:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "923:31:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "913:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "913:42:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "906:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:50:3"
                  },
                  "nodeType": "YulIf",
                  "src": "903:2:3"
                }
              ]
            },
            "name": "validator_revert_t_contract$_RWD",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "882:5:3",
                "type": ""
              }
            ],
            "src": "840:139:3"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_RWD_$227t_contract$_Tether_$417_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_contract$_RWD(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_contract$_RWD(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function validator_revert_t_contract$_RWD(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1653:3",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:3",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:3"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:3",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:3",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:3",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:3"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:3",
                "type": ""
              }
            ],
            "src": "14:203:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "334:102:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "344:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "356:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "367:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "352:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "344:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "386:9:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "401:6:3"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "417:3:3",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "422:1:3",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "413:11:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "426:1:3",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "409:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "409:19:3"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "379:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "379:51:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RWD_$227__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "303:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "314:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "325:4:3",
                "type": ""
              }
            ],
            "src": "222:214:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "556:102:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "566:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "578:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "589:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "574:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "566:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "608:9:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "623:6:3"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "639:3:3",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:1:3",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "635:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "635:11:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "648:1:3",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "631:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "631:19:3"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "619:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "601:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "601:51:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Tether_$417__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "525:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "536:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "547:4:3",
                "type": ""
              }
            ],
            "src": "441:217:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "784:482:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "794:12:3",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "804:2:3",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "798:2:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "822:9:3"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "833:2:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:21:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "815:21:3"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "845:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "865:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "859:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "859:13:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "849:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "892:9:3"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "903:2:3"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "888:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:18:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "908:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "881:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "881:34:3"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "924:13:3",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "933:4:3"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "928:1:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "996:90:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1025:9:3"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1036:1:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1021:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1021:17:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1040:2:3",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1017:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1017:26:3"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1059:6:3"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1067:1:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1055:3:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1055:14:3"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1071:2:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1051:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1051:23:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1045:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1045:30:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1010:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1010:66:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1010:66:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "957:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "960:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "954:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "968:19:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "970:15:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "979:1:3"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "982:2:3"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "975:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:10:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "970:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "950:3:3",
                    "statements": []
                  },
                  "src": "946:140:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1120:69:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1149:9:3"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1160:6:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1145:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1145:22:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1169:2:3",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1141:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1141:31:3"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1174:4:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1134:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1134:45:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1134:45:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1101:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1104:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1098:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1098:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1095:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1198:62:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1214:9:3"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1233:6:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1241:2:3",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1229:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1229:15:3"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1250:2:3",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1246:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1246:7:3"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1225:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1225:29:3"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:45:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1257:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1198:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "753:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "764:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "775:4:3",
                "type": ""
              }
            ],
            "src": "663:603:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1326:325:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1350:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1356:1:3",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1346:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1336:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1367:38:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1397:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1393:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1393:12:3"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1371:18:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1444:31:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1446:27:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1460:6:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1468:4:3",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1456:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1456:17:3"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1446:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1424:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1417:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:26:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1414:2:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1534:111:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1555:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1562:3:3",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1567:10:3",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1558:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1558:20:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1548:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1548:31:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1548:31:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1599:1:3",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1602:4:3",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1592:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1592:15:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1592:15:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1627:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1630:4:3",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1620:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1620:15:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1620:15:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1490:18:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1513:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1521:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1510:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1510:14:3"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1487:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:38:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1484:2:3"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1306:4:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1315:6:3",
                "type": ""
              }
            ],
            "src": "1271:380:3"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_RWD_$227__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_Tether_$417__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "136:37:0:-:0;108:241;136:37;;108:241;136:37;;;-1:-1:-1;;;136:37:0;;;;;;-1:-1:-1;;136:37:0;;:::i;:::-;;249:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;294:3;:15;;-1:-1:-1;;;;;294:15:0;;;-1:-1:-1;;;;;;294:15:0;;;;;;;316:6;:24;;;;;;;;;;;108:241;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;108:241:0;;;-1:-1:-1;108:241:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:436:3;;;179:2;167:9;158:7;154:23;150:32;147:2;;;200:6;192;185:22;147:2;237:9;231:16;256:39;289:5;256:39;:::i;:::-;364:2;349:18;;343:25;314:5;;-1:-1:-1;377:41:3;343:25;377:41;:::i;:::-;437:7;427:17;;;137:313;;;;;:::o;455:380::-;540:1;530:12;;587:1;577:12;;;598:2;;652:4;644:6;640:17;630:27;;598:2;705;697:6;694:14;674:18;671:38;668:2;;;751:10;746:3;742:20;739:1;732:31;786:4;783:1;776:15;814:4;811:1;804:15;668:2;;510:325;;;:::o;840:139::-;-1:-1:-1;;;;;923:31:3;;913:42;;903:2;;969:1;966;959:12;903:2;893:86;:::o;:::-;108:241:0;;;;;;",
  "deployedSourceMap": "108:241:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;203:14;;;:::i;:::-;;;;;;;:::i;222:20::-;;;:::i;178:::-;;;:::i;136:37::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;203:14::-;;;-1:-1:-1;;;;;203:14:0;;:::o;222:20::-;;;-1:-1:-1;;;;;222:20:0;;:::o;178:::-;;;-1:-1:-1;;;;;178:20:0;;:::o;14:203:3:-;-1:-1:-1;;;;;178:32:3;;;;160:51;;148:2;133:18;;115:102::o;663:603::-;;804:2;833;822:9;815:21;865:6;859:13;908:6;903:2;892:9;888:18;881:34;933:4;946:140;960:6;957:1;954:13;946:140;;;1055:14;;;1051:23;;1045:30;1021:17;;;1040:2;1017:26;1010:66;975:10;;946:140;;;1104:6;1101:1;1098:13;1095:2;;;1174:4;1169:2;1160:6;1149:9;1145:22;1141:31;1134:45;1095:2;-1:-1:-1;1250:2:3;1229:15;-1:-1:-1;;1225:29:3;1210:45;;;;1257:2;1206:54;;784:482;-1:-1:-1;;;784:482:3:o;1271:380::-;1356:1;1346:12;;1403:1;1393:12;;;1414:2;;1468:4;1460:6;1456:17;1446:27;;1414:2;1521;1513:6;1510:14;1490:18;1487:38;1484:2;;;1567:10;1562:3;1558:20;1555:1;1548:31;1602:4;1599:1;1592:15;1630:4;1627:1;1620:15;1484:2;;1326:325;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity '0.8.0';\r\nimport \"./RWD.sol\";\r\nimport \"./Tether.sol\";\r\n\r\n\r\ncontract DecentralBank {\r\n  string public name = 'Decentral Bank';\r\n  address public owner;\r\n  RWD public rwd;\r\n  Tether public tether;\r\n\r\n  constructor(RWD _rwd, Tether _tether) {\r\n    rwd = RWD(_rwd);\r\n    tether = Tether(_tether);\r\n  }\r\n}",
  "sourcePath": "C:/all/solidity/guide-clarian/defi-staking-app/src/contracts/DecentralBank.sol",
  "ast": {
    "absolutePath": "/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/DecentralBank.sol",
    "exportedSymbols": {
      "DecentralBank": [
        37
      ],
      "RWD": [
        227
      ],
      "Tether": [
        417
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8.0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/RWD.sol",
        "file": "./RWD.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 228,
        "src": "59:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/Tether.sol",
        "file": "./Tether.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 418,
        "src": "80:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "DecentralBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 6,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "136:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "136:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "446563656e7472616c2042616e6b",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "157:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_517b48598670b90dc9ba54628155bce1ee7091baf20941f742e78f9b9a2bb10f",
                "typeString": "literal_string \"Decentral Bank\""
              },
              "value": "Decentral Bank"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "178:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a8972d3",
            "id": 11,
            "mutability": "mutable",
            "name": "rwd",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "203:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RWD_$227",
              "typeString": "contract RWD"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "RWD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 227,
                "src": "203:3:0"
              },
              "referencedDeclaration": 227,
              "src": "203:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RWD_$227",
                "typeString": "contract RWD"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5efc071a",
            "id": 14,
            "mutability": "mutable",
            "name": "tether",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "222:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tether_$417",
              "typeString": "contract Tether"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "Tether",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 417,
                "src": "222:6:0"
              },
              "referencedDeclaration": 417,
              "src": "222:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tether_$417",
                "typeString": "contract Tether"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "287:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "rwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "294:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$227",
                        "typeString": "contract RWD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25,
                          "name": "_rwd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "304:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RWD_$227",
                            "typeString": "contract RWD"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RWD_$227",
                            "typeString": "contract RWD"
                          }
                        ],
                        "id": 24,
                        "name": "RWD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "300:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RWD_$227_$",
                          "typeString": "type(contract RWD)"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "300:9:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$227",
                        "typeString": "contract RWD"
                      }
                    },
                    "src": "294:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$227",
                      "typeString": "contract RWD"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "294:15:0"
                },
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "tether",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "316:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$417",
                        "typeString": "contract Tether"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31,
                          "name": "_tether",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "332:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Tether_$417",
                            "typeString": "contract Tether"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Tether_$417",
                            "typeString": "contract Tether"
                          }
                        ],
                        "id": 30,
                        "name": "Tether",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "325:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Tether_$417_$",
                          "typeString": "type(contract Tether)"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "325:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$417",
                        "typeString": "contract Tether"
                      }
                    },
                    "src": "316:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$417",
                      "typeString": "contract Tether"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "316:24:0"
                }
              ]
            },
            "id": 36,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_rwd",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "261:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RWD_$227",
                    "typeString": "contract RWD"
                  },
                  "typeName": {
                    "id": 16,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15,
                      "name": "RWD",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 227,
                      "src": "261:3:0"
                    },
                    "referencedDeclaration": 227,
                    "src": "261:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$227",
                      "typeString": "contract RWD"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_tether",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "271:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tether_$417",
                    "typeString": "contract Tether"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "Tether",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 417,
                      "src": "271:6:0"
                    },
                    "referencedDeclaration": 417,
                    "src": "271:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$417",
                      "typeString": "contract Tether"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "260:26:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "287:0:0"
            },
            "scope": 37,
            "src": "249:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "108:241:0"
      }
    ],
    "src": "33:316:0"
  },
  "legacyAST": {
    "absolutePath": "/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/DecentralBank.sol",
    "exportedSymbols": {
      "DecentralBank": [
        37
      ],
      "RWD": [
        227
      ],
      "Tether": [
        417
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8.0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/RWD.sol",
        "file": "./RWD.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 228,
        "src": "59:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/all/solidity/guide-clarian/defi-staking-app/src/contracts/Tether.sol",
        "file": "./Tether.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 418,
        "src": "80:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "DecentralBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 6,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "136:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "136:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "446563656e7472616c2042616e6b",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "157:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_517b48598670b90dc9ba54628155bce1ee7091baf20941f742e78f9b9a2bb10f",
                "typeString": "literal_string \"Decentral Bank\""
              },
              "value": "Decentral Bank"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "178:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a8972d3",
            "id": 11,
            "mutability": "mutable",
            "name": "rwd",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "203:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RWD_$227",
              "typeString": "contract RWD"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "RWD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 227,
                "src": "203:3:0"
              },
              "referencedDeclaration": 227,
              "src": "203:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RWD_$227",
                "typeString": "contract RWD"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5efc071a",
            "id": 14,
            "mutability": "mutable",
            "name": "tether",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "222:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tether_$417",
              "typeString": "contract Tether"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "Tether",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 417,
                "src": "222:6:0"
              },
              "referencedDeclaration": 417,
              "src": "222:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tether_$417",
                "typeString": "contract Tether"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "287:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "rwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "294:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$227",
                        "typeString": "contract RWD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25,
                          "name": "_rwd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "304:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RWD_$227",
                            "typeString": "contract RWD"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RWD_$227",
                            "typeString": "contract RWD"
                          }
                        ],
                        "id": 24,
                        "name": "RWD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "300:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RWD_$227_$",
                          "typeString": "type(contract RWD)"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "300:9:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$227",
                        "typeString": "contract RWD"
                      }
                    },
                    "src": "294:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$227",
                      "typeString": "contract RWD"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "294:15:0"
                },
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "tether",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "316:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$417",
                        "typeString": "contract Tether"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31,
                          "name": "_tether",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "332:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Tether_$417",
                            "typeString": "contract Tether"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Tether_$417",
                            "typeString": "contract Tether"
                          }
                        ],
                        "id": 30,
                        "name": "Tether",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "325:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Tether_$417_$",
                          "typeString": "type(contract Tether)"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "325:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$417",
                        "typeString": "contract Tether"
                      }
                    },
                    "src": "316:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$417",
                      "typeString": "contract Tether"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "316:24:0"
                }
              ]
            },
            "id": 36,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_rwd",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "261:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RWD_$227",
                    "typeString": "contract RWD"
                  },
                  "typeName": {
                    "id": 16,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15,
                      "name": "RWD",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 227,
                      "src": "261:3:0"
                    },
                    "referencedDeclaration": 227,
                    "src": "261:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$227",
                      "typeString": "contract RWD"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_tether",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "271:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tether_$417",
                    "typeString": "contract Tether"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "Tether",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 417,
                      "src": "271:6:0"
                    },
                    "referencedDeclaration": 417,
                    "src": "271:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$417",
                      "typeString": "contract Tether"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "260:26:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "287:0:0"
            },
            "scope": 37,
            "src": "249:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "108:241:0"
      }
    ],
    "src": "33:316:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9bB1975DB7C2CD12f3EB34D9d46fE864eb536f82",
      "transactionHash": "0x1b62873c756c04664895bf3ff32cc4596627f8c760d6101afee267be9691d003"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-02-04T14:25:10.325Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}